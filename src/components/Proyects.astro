---
import { proyects } from "@/data/Proyects.json";

// Configure pagination
const projectsPerPage = 6;
const totalProjects = proyects.length;
const totalPages = Math.ceil(totalProjects / projectsPerPage);
---
<section class="mt-20 md:mt-40 lg:mt-32 xl:mt-28">
    <div class="text-gris-cemento text-center md:text-right md:mr-[10%]">
        <p class="font-normal text-2xl sm:text-3xl mb-12 max-sm:px-4"><span class="p-1 bg-amarillo font-bold">Resultados tangibles:</span> El impacto de nuestros proyectos</p>
        <h2 class="font-bold text-4xl sm:text-5xl md:text-6xl max-w-(--breakpoint-xl) ml-auto max-sm:px-4">Soluciones que marcan <span class="text-nowrap">la diferencia</span></h2>
    </div>
    <section class="container mx-auto mt-24">
        <div id="projects-container" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mx-auto">
            {   
                proyects.map((proyect, index) => (
                    <div class="project-item w-full h-full py-2 max-sm:px-6" data-index={index}>
                        <div class="relative overflow-hidden group">
                            <img 
                                src={proyect.thumb}
                                alt={proyect.title}
                                class="object-cover w-full h-96 sm:h-64 lg:h-72 xl:h-80 2xl:h-96 hover:scale-105 transition-all duration-300 ease-in-out"
                                loading="lazy"
                            />
                            <button 
                                class="expand-image-btn absolute top-2 right-2 bg-amarillo text-gris-cemento p-2 rounded-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300 hover:bg-gris-cemento hover:text-amarillo z-10"
                                data-image={proyect.original}
                                data-title={proyect.title}
                                aria-label="Ver imagen completa"
                            >
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5" />
                                </svg>
                            </button>
                        </div>
                        <h3 class="text-gris-cemento font-semibold uppercase text-md ml-2 mt-4">
                            <svg class="inline mr-2 w-9" data-name="Capa 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 38.39 12">
                                <path style="fill:#f6ca0f" d="M0 0h38.39v12H0z" data-name="Capa 1"/>
                            </svg>
                            {proyect.title}
                        </h3>
                        <p
                            class="text-gris-cemento mt-2 prose mx-2"
                        >
                            {proyect.description}
                        </p>
                    </div>
                ))
            }
        </div>
        
        <!-- Pagination controls -->
        <div class="pagination-container flex justify-center items-center mt-12">
            <button id="prev-page" class="pagination-btn border border-gris-bg bg-gris-cemento text-white px-4 py-2 rounded-l-md hover:bg-amarillo hover:text-gris-cemento transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gris-cemento disabled:hover:text-white">
                <span class="sr-only">Anterior</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
            </button>
            
            <div id="pagination-numbers" class="flex">
                <!-- Pagination numbers will be inserted here by JavaScript -->
            </div>
            
            <button id="next-page" class="pagination-btn border border-gris-bg bg-gris-cemento text-white px-4 py-2 rounded-r-md hover:bg-amarillo hover:text-gris-cemento transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gris-cemento disabled:hover:text-white">
                <span class="sr-only">Siguiente</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
            </button>
        </div>
    </section>
</section>

<!-- Image Modal -->
<div id="image-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden bg-black bg-opacity-80 transition-opacity duration-300 opacity-0">
    <div class="relative max-w-4xl mx-auto p-4 w-full">
        <button id="close-modal" class="absolute top-2 right-2 text-white bg-gris-cemento hover:bg-amarillo hover:text-gris-cemento p-2 rounded-full transition-colors duration-300 z-20">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>
        <div class="modal-content transform scale-95 transition-transform duration-300">
            <!-- Loading Spinner -->
            <div id="loading-spinner" class="hidden">
                <div class="flex justify-center items-center h-[50vh]">
                    <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-amarillo"></div>
                </div>
            </div>
            <img id="modal-image" src="" alt="" class="max-h-[80vh] mx-auto object-contain hidden">
            <h3 id="modal-title" class="text-white text-center mt-4 font-semibold text-xl"></h3>
        </div>
    </div>
</div>

<script>
    // Pagination functionality
    document.addEventListener('DOMContentLoaded', () => {
        const projectsPerPage = 9;
        const totalProjects = document.querySelectorAll('.project-item').length;
        const totalPages = Math.ceil(totalProjects / projectsPerPage);
        
        const projectItems = document.querySelectorAll('.project-item');
        const paginationNumbers = document.getElementById('pagination-numbers');
        const prevButton = document.getElementById('prev-page');
        const nextButton = document.getElementById('next-page');
        
        let currentPage = 1;
        
        // Function to create pagination numbers
        const createPaginationNumbers = () => {
            paginationNumbers.innerHTML = '';
            
            for (let i = 1; i <= totalPages; i++) {
                const pageNumber = document.createElement('button');
                pageNumber.className = `pagination-number px-4 py-2 border border-gris-bg ${
                    i === currentPage 
                        ? 'bg-amarillo text-gris-cemento font-bold' 
                        : 'bg-gris-cemento text-white hover:bg-amarillo hover:text-gris-cemento'
                } transition-colors duration-300`;
                pageNumber.textContent = i;
                pageNumber.setAttribute('page-index', i);
                pageNumber.setAttribute('aria-label', `Page ${i}`);
                
                paginationNumbers.appendChild(pageNumber);
            }
        };
        
        // Function to update pagination buttons state
        const updatePaginationButtons = () => {
            prevButton.disabled = currentPage === 1;
            nextButton.disabled = currentPage === totalPages;
            
            document.querySelectorAll('.pagination-number').forEach(button => {
                const pageIndex = Number(button.getAttribute('page-index'));
                if (pageIndex === currentPage) {
                    button.classList.remove('bg-gris-cemento', 'text-white');
                    button.classList.add('bg-amarillo', 'text-gris-cemento', 'font-bold');
                } else {
                    button.classList.remove('bg-amarillo', 'text-gris-cemento', 'font-bold');
                    button.classList.add('bg-gris-cemento', 'text-white');
                }
            });
        };
        
        // Function to show projects for the current page
        const setCurrentPage = (pageNum) => {
            currentPage = pageNum;
            
            const prevRange = (pageNum - 1) * projectsPerPage;
            const currRange = pageNum * projectsPerPage;
            
            projectItems.forEach((item, index) => {
                item.style.display = (index >= prevRange && index < currRange) ? 'block' : 'none';
            });
            
            updatePaginationButtons();
        };
        
        // Initialize pagination
        createPaginationNumbers();
        setCurrentPage(1);
        
        // Event listeners for pagination buttons
        prevButton.addEventListener('click', () => {
            if (currentPage > 1) {
                setCurrentPage(currentPage - 1);
            }
        });
        
        nextButton.addEventListener('click', () => {
            if (currentPage < totalPages) {
                setCurrentPage(currentPage + 1);
            }
        });
        
        // Event delegation for pagination numbers
        paginationNumbers.addEventListener('click', (e) => {
            if (e.target.classList.contains('pagination-number')) {
                const pageIndex = Number(e.target.getAttribute('page-index'));
                setCurrentPage(pageIndex);
            }
        });
    });

    // Image Modal Functionality
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('image-modal');
        const modalImage = document.getElementById('modal-image');
        const modalTitle = document.getElementById('modal-title');
        const closeModalBtn = document.getElementById('close-modal');
        const expandButtons = document.querySelectorAll('.expand-image-btn');
        const modalContent = document.querySelector('.modal-content');
        const loadingSpinner = document.getElementById('loading-spinner');
        
        // Open modal when expand button is clicked
        expandButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.preventDefault();
                const imageSrc = button.getAttribute('data-image');
                const imageTitle = button.getAttribute('data-title');
                
                // Show modal with animation first
                modal.classList.remove('hidden');
                
                // Show loading spinner, hide image
                loadingSpinner.classList.remove('hidden');
                modalImage.classList.add('hidden');
                
                // Clear previous image and set new title
                modalImage.src = '';
                modalTitle.textContent = imageTitle;
                
                setTimeout(() => {
                    modal.classList.add('opacity-100');
                    modal.classList.remove('opacity-0');
                    modalContent.classList.remove('scale-95');
                    modalContent.classList.add('scale-100');
                }, 10);
                
                // Load new image
                const newImage = new Image();
                newImage.onload = function() {
                    // Hide spinner, show image
                    loadingSpinner.classList.add('hidden');
                    modalImage.src = imageSrc;
                    modalImage.classList.remove('hidden');
                };
                newImage.onerror = function() {
                    // If image fails to load, hide spinner and show error message
                    loadingSpinner.classList.add('hidden');
                    modalTitle.textContent = 'Error al cargar la imagen: ' + imageTitle;
                };
                newImage.src = imageSrc;
                
                // Prevent scrolling on body
                document.body.style.overflow = 'hidden';
            });
        });
        
        // Close modal function
        const closeModal = () => {
            modalContent.classList.remove('scale-100');
            modalContent.classList.add('scale-95');
            modal.classList.remove('opacity-100');
            modal.classList.add('opacity-0');
            
            setTimeout(() => {
                modal.classList.add('hidden');
                // Clear the image src to prevent the old image from showing on next open
                modalImage.src = '';
                modalImage.classList.add('hidden');
                // Re-enable scrolling
                document.body.style.overflow = '';
            }, 300);
        };
        
        // Close modal when close button is clicked
        closeModalBtn.addEventListener('click', closeModal);
        
        // Close modal when clicking outside the image
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });
        
        // Close modal with Escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
                closeModal();
            }
        });
    });
</script>
